/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Presale,
  PresaleInterface,
} from "../../../contracts/Presale.sol/Presale";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [],
    name: "PresaleEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usdtAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "TokensPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usdtAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "PRICE_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_PRICE_USDT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VESTING_PERIODS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allocations",
    outputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimed",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "usdtAmount",
        type: "uint256",
      },
    ],
    name: "buyTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endPresale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRemainingTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSaleTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPresaleEnded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPurchase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minPurchase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleEnded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "saleToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_min",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_max",
        type: "uint256",
      },
    ],
    name: "setMinMax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "updateOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdt",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405262989680600355633b9aca00600455620151806005556000600660006101000a81548160ff02191690831515021790555034801561004157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073870f23d41bb82cfd5fb80e2297b00d2f65122a33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550734654936576e68e4d9bb839acc5f194089a5cd285600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061202d8061013b6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80638da5cb5b116100b8578063b8e50cab1161007c578063b8e50cab146102f9578063b920ade214610317578063e580b2b014610349578063e985e36714610367578063f1a640f814610385578063f8736672146103a357610142565b80638da5cb5b14610279578063977b055b14610297578063a43be57b146102b5578063a681f950146102bf578063af35ae27146102db57610142565b806333b5b62e1161010a57806333b5b62e146101ca5780633610724e146101e857806348c54b9d1461020457806352a9039c1461020e5780637decf27f1461023f578063880cdc311461025d57610142565b806306c8e316146101475780631e7bace01461016657806324600fc314610184578063249b7c191461018e5780632f48ab7d146101ac575b600080fd5b61014f6103c1565b60405161015d929190611411565b60405180910390f35b61016e6103d0565b60405161017b919061143a565b60405180910390f35b61018c6103d5565b005b6101966107df565b6040516101a3919061143a565b60405180910390f35b6101b46107e5565b6040516101c191906114d4565b60405180910390f35b6101d261080b565b6040516101df919061143a565b60405180910390f35b61020260048036038101906101fd9190611520565b610811565b005b61020c610b88565b005b6102286004803603810190610223919061158b565b610e59565b604051610236929190611411565b60405180910390f35b610247610e7d565b60405161025491906115d3565b60405180910390f35b6102776004803603810190610272919061158b565b610e94565b005b610281610fd4565b60405161028e91906115fd565b60405180910390f35b61029f610ff8565b6040516102ac919061143a565b60405180910390f35b6102bd610ffe565b005b6102d960048036038101906102d49190611618565b61112c565b005b6102e361120f565b6040516102f0919061143a565b60405180910390f35b6103016112b2565b60405161030e919061143a565b60405180910390f35b610331600480360381019061032c919061158b565b6112b8565b60405161034093929190611658565b60405180910390f35b6103516113b5565b60405161035e91906115d3565b60405180910390f35b61036f6113c8565b60405161037c91906114d4565b60405180910390f35b61038d6113ee565b60405161039a919061143a565b60405180910390f35b6103ab6113f3565b6040516103b8919061143a565b60405180910390f35b600080602d6004915091509091565b600a81565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610463576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045a906116ec565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104c091906115fd565b602060405180830381865afa1580156104dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105019190611721565b90506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161056091906115fd565b602060405180830381865afa15801561057d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a19190611721565b9050600082111561066e57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b815260040161062992919061174e565b6020604051808303816000875af1158015610648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066c91906117a3565b505b600660009054906101000a900460ff16801561068a5750600081115b1561076b5760005b60648110156106a8578080600101915050610692565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161072692919061174e565b6020604051808303816000875af1158015610745573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076991906117a3565b505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc683836040516107d3929190611411565b60405180910390a25050565b60075481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b600660009054906101000a900460ff1615610861576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108589061181c565b60405180910390fd5b6003548110156108a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089d90611888565b60405180910390fd5b6004548111156108eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e2906118f4565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161094a929190611914565b602060405180830381865afa158015610967573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098b9190611721565b9050818110156109d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c790611989565b60405180910390fd5b6000602d6004600a6109e29190611b0b565b846109ed9190611b56565b6109f79190611bc7565b905080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610a4b9190611bf8565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610ab193929190611c2c565b6020604051808303816000875af1158015610ad0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af491906117a3565b610b33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2a90611caf565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f338483604051610b7b929190611411565b60405180910390a2505050565b600660009054906101000a900460ff16610bd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bce90611d1b565b60405180910390fd5b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015411610c61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5890611d87565b60405180910390fd5b600060075442610c719190611da7565b9050600060055482610c839190611bc7565b9050600a811115610c9357600a90505b6000600a828560000154610ca79190611b56565b610cb19190611bc7565b90506000846001015482610cc59190611da7565b905060008111610d0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0190611e27565b60405180910390fd5b80856001016000828254610d1e9190611bf8565b92505081905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610d8292919061174e565b6020604051808303816000875af1158015610da1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc591906117a3565b610e04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfb90611e93565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e43082604051610e4a919061143a565b60405180910390a25050505050565b60086020528060005260406000206000915090508060000154908060010154905082565b6000600660009054906101000a900460ff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f19906116ec565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8890611eff565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461108c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611083906116ec565b60405180910390fd5b600660009054906101000a900460ff16156110dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d390611f6b565b60405180910390fd5b6001600660006101000a81548160ff021916908315150217905550426007819055507f1eb1561f8507eb9bc6988331f66f369e75710f2b4b678ad5b4a52454b6636f5f60405160405180910390a1565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b1906116ec565b60405180910390fd5b808211156111fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f490611fd7565b60405180910390fd5b81600381905550806004819055505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161126c91906115fd565b602060405180830381865afa158015611289573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ad9190611721565b905090565b60055481565b600080600080600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050806000015193508060200151925060009150600660009054906101000a900460ff16156113ad576000600754426113559190611da7565b90506000600554826113679190611bc7565b9050600a81111561137757600a90505b6000600a82856000015161138b9190611b56565b6113959190611bc7565b90508360200151816113a79190611da7565b94505050505b509193909250565b600660009054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600481565b602d81565b6000819050919050565b61140b816113f8565b82525050565b60006040820190506114266000830185611402565b6114336020830184611402565b9392505050565b600060208201905061144f6000830184611402565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061149a61149561149084611455565b611475565b611455565b9050919050565b60006114ac8261147f565b9050919050565b60006114be826114a1565b9050919050565b6114ce816114b3565b82525050565b60006020820190506114e960008301846114c5565b92915050565b600080fd5b6114fd816113f8565b811461150857600080fd5b50565b60008135905061151a816114f4565b92915050565b600060208284031215611536576115356114ef565b5b60006115448482850161150b565b91505092915050565b600061155882611455565b9050919050565b6115688161154d565b811461157357600080fd5b50565b6000813590506115858161155f565b92915050565b6000602082840312156115a1576115a06114ef565b5b60006115af84828501611576565b91505092915050565b60008115159050919050565b6115cd816115b8565b82525050565b60006020820190506115e860008301846115c4565b92915050565b6115f78161154d565b82525050565b600060208201905061161260008301846115ee565b92915050565b6000806040838503121561162f5761162e6114ef565b5b600061163d8582860161150b565b925050602061164e8582860161150b565b9150509250929050565b600060608201905061166d6000830186611402565b61167a6020830185611402565b6116876040830184611402565b949350505050565b600082825260208201905092915050565b7f4e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b60006116d660098361168f565b91506116e1826116a0565b602082019050919050565b60006020820190508181036000830152611705816116c9565b9050919050565b60008151905061171b816114f4565b92915050565b600060208284031215611737576117366114ef565b5b60006117458482850161170c565b91505092915050565b600060408201905061176360008301856115ee565b6117706020830184611402565b9392505050565b611780816115b8565b811461178b57600080fd5b50565b60008151905061179d81611777565b92915050565b6000602082840312156117b9576117b86114ef565b5b60006117c78482850161178e565b91505092915050565b7f50726573616c652068617320656e646564000000000000000000000000000000600082015250565b600061180660118361168f565b9150611811826117d0565b602082019050919050565b60006020820190508181036000830152611835816117f9565b9050919050565b7f42656c6f77206d696e696d756d20707572636861736500000000000000000000600082015250565b600061187260168361168f565b915061187d8261183c565b602082019050919050565b600060208201905081810360008301526118a181611865565b9050919050565b7f41626f7665206d6178696d756d20707572636861736500000000000000000000600082015250565b60006118de60168361168f565b91506118e9826118a8565b602082019050919050565b6000602082019050818103600083015261190d816118d1565b9050919050565b600060408201905061192960008301856115ee565b61193660208301846115ee565b9392505050565b7f416c6c6f77616e636520746f6f206c6f77000000000000000000000000000000600082015250565b600061197360118361168f565b915061197e8261193d565b602082019050919050565b600060208201905081810360008301526119a281611966565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115611a2f57808604811115611a0b57611a0a6119a9565b5b6001851615611a1a5780820291505b8081029050611a28856119d8565b94506119ef565b94509492505050565b600082611a485760019050611b04565b81611a565760009050611b04565b8160018114611a6c5760028114611a7657611aa5565b6001915050611b04565b60ff841115611a8857611a876119a9565b5b8360020a915084821115611a9f57611a9e6119a9565b5b50611b04565b5060208310610133831016604e8410600b8410161715611ada5782820a905083811115611ad557611ad46119a9565b5b611b04565b611ae784848460016119e5565b92509050818404811115611afe57611afd6119a9565b5b81810290505b9392505050565b6000611b16826113f8565b9150611b21836113f8565b9250611b4e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611a38565b905092915050565b6000611b61826113f8565b9150611b6c836113f8565b9250828202611b7a816113f8565b91508282048414831517611b9157611b906119a9565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611bd2826113f8565b9150611bdd836113f8565b925082611bed57611bec611b98565b5b828204905092915050565b6000611c03826113f8565b9150611c0e836113f8565b9250828201905080821115611c2657611c256119a9565b5b92915050565b6000606082019050611c4160008301866115ee565b611c4e60208301856115ee565b611c5b6040830184611402565b949350505050565b7f55534454207472616e73666572206661696c6564000000000000000000000000600082015250565b6000611c9960148361168f565b9150611ca482611c63565b602082019050919050565b60006020820190508181036000830152611cc881611c8c565b9050919050565b7f50726573616c65206e6f7420656e646564000000000000000000000000000000600082015250565b6000611d0560118361168f565b9150611d1082611ccf565b602082019050919050565b60006020820190508181036000830152611d3481611cf8565b9050919050565b7f4e6f20616c6c6f636174696f6e00000000000000000000000000000000000000600082015250565b6000611d71600d8361168f565b9150611d7c82611d3b565b602082019050919050565b60006020820190508181036000830152611da081611d64565b9050919050565b6000611db2826113f8565b9150611dbd836113f8565b9250828203905081811115611dd557611dd46119a9565b5b92915050565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b6000611e1160108361168f565b9150611e1c82611ddb565b602082019050919050565b60006020820190508181036000830152611e4081611e04565b9050919050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b6000611e7d60158361168f565b9150611e8882611e47565b602082019050919050565b60006020820190508181036000830152611eac81611e70565b9050919050565b7f5a65726f20616464726573730000000000000000000000000000000000000000600082015250565b6000611ee9600c8361168f565b9150611ef482611eb3565b602082019050919050565b60006020820190508181036000830152611f1881611edc565b9050919050565b7f416c726561647920656e64656400000000000000000000000000000000000000600082015250565b6000611f55600d8361168f565b9150611f6082611f1f565b602082019050919050565b60006020820190508181036000830152611f8481611f48565b9050919050565b7f496e76616c6964206d696e2f6d61780000000000000000000000000000000000600082015250565b6000611fc1600f8361168f565b9150611fcc82611f8b565b602082019050919050565b60006020820190508181036000830152611ff081611fb4565b905091905056fea2646970667358221220c8c57a05dc71cf3b0979207003cb4cddde9187a9de443a7010292ca4daac8f9d64736f6c634300081c0033";

type PresaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PresaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Presale__factory extends ContractFactory {
  constructor(...args: PresaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Presale & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Presale__factory {
    return super.connect(runner) as Presale__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PresaleInterface {
    return new Interface(_abi) as PresaleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Presale {
    return new Contract(address, _abi, runner) as unknown as Presale;
  }
}

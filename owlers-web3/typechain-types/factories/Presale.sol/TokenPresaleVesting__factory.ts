/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TokenPresaleVesting,
  TokenPresaleVestingInterface,
} from "../../Presale.sol/TokenPresaleVesting";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [],
    name: "PresaleEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usdtAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "TokensPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usdtAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "PRICE_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_PRICE_USDT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VESTING_PERIODS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allocations",
    outputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimed",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "usdtAmount",
        type: "uint256",
      },
    ],
    name: "buyTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endPresale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRemainingTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSaleTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPresaleEnded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPurchase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minPurchase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleEnded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "saleToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_min",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_max",
        type: "uint256",
      },
    ],
    name: "setMinMax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "updateOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdt",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405262989680600355633b9aca00600455620151806005556000600660006101000a81548160ff02191690831515021790555034801561004157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073f01966d6ac471fbcdf2d35940a894d549c915c16600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550734654936576e68e4d9bb839acc5f194089a5cd285600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611eb78061013b6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80638da5cb5b116100b8578063b8e50cab1161007c578063b8e50cab146102f9578063b920ade214610317578063e580b2b014610349578063e985e36714610367578063f1a640f814610385578063f8736672146103a357610142565b80638da5cb5b14610279578063977b055b14610297578063a43be57b146102b5578063a681f950146102bf578063af35ae27146102db57610142565b806333b5b62e1161010a57806333b5b62e146101ca5780633610724e146101e857806348c54b9d1461020457806352a9039c1461020e5780637decf27f1461023f578063880cdc311461025d57610142565b806306c8e316146101475780631e7bace01461016657806324600fc314610184578063249b7c191461018e5780632f48ab7d146101ac575b600080fd5b61014f6103c1565b60405161015d929190611330565b60405180910390f35b61016e6103d0565b60405161017b9190611359565b60405180910390f35b61018c6103d5565b005b6101966107df565b6040516101a39190611359565b60405180910390f35b6101b46107e5565b6040516101c191906113f3565b60405180910390f35b6101d261080b565b6040516101df9190611359565b60405180910390f35b61020260048036038101906101fd919061143f565b610811565b005b61020c610aa2565b005b610228600480360381019061022391906114aa565b610d73565b604051610236929190611330565b60405180910390f35b610247610d97565b60405161025491906114f2565b60405180910390f35b610277600480360381019061027291906114aa565b610dae565b005b610281610eee565b60405161028e919061151c565b60405180910390f35b61029f610f12565b6040516102ac9190611359565b60405180910390f35b6102bd610f18565b005b6102d960048036038101906102d49190611537565b611046565b005b6102e3611129565b6040516102f09190611359565b60405180910390f35b6103016111cc565b60405161030e9190611359565b60405180910390f35b610331600480360381019061032c91906114aa565b6111d2565b60405161034093929190611577565b60405180910390f35b6103516112d4565b60405161035e91906114f2565b60405180910390f35b61036f6112e7565b60405161037c91906113f3565b60405180910390f35b61038d61130d565b60405161039a9190611359565b60405180910390f35b6103ab611312565b6040516103b89190611359565b60405180910390f35b600080602d6004915091509091565b600a81565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610463576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045a9061160b565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104c0919061151c565b602060405180830381865afa1580156104dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105019190611640565b90506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610560919061151c565b602060405180830381865afa15801561057d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a19190611640565b9050600082111561066e57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b815260040161062992919061166d565b6020604051808303816000875af1158015610648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066c91906116c2565b505b600660009054906101000a900460ff16801561068a5750600081115b1561076b5760005b60648110156106a8578080600101915050610692565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161072692919061166d565b6020604051808303816000875af1158015610745573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076991906116c2565b505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc683836040516107d3929190611330565b60405180910390a25050565b60075481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b600660009054906101000a900460ff1615610861576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108589061173b565b60405180910390fd5b6003548110156108a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089d906117a7565b60405180910390fd5b6004548111156108eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e290611813565b60405180910390fd5b6000602d6004600a6108fd9190611995565b8361090891906119e0565b6109129190611a51565b905080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546109669190611a82565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016109cc93929190611ab6565b6020604051808303816000875af11580156109eb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0f91906116c2565b610a4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4590611b39565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f338383604051610a96929190611330565b60405180910390a25050565b600660009054906101000a900460ff16610af1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae890611ba5565b60405180910390fd5b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015411610b7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7290611c11565b60405180910390fd5b600060075442610b8b9190611c31565b9050600060055482610b9d9190611a51565b9050600a811115610bad57600a90505b6000600a828560000154610bc191906119e0565b610bcb9190611a51565b90506000846001015482610bdf9190611c31565b905060008111610c24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1b90611cb1565b60405180910390fd5b80856001016000828254610c389190611a82565b92505081905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610c9c92919061166d565b6020604051808303816000875af1158015610cbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdf91906116c2565b610d1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1590611d1d565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e43082604051610d649190611359565b60405180910390a25050505050565b60086020528060005260406000206000915090508060000154908060010154905082565b6000600660009054906101000a900460ff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e339061160b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610eab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea290611d89565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fa6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9d9061160b565b60405180910390fd5b600660009054906101000a900460ff1615610ff6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fed90611df5565b60405180910390fd5b6001600660006101000a81548160ff021916908315150217905550426007819055507f1eb1561f8507eb9bc6988331f66f369e75710f2b4b678ad5b4a52454b6636f5f60405160405180910390a1565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110cb9061160b565b60405180910390fd5b80821115611117576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110e90611e61565b60405180910390fd5b81600381905550806004819055505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611186919061151c565b602060405180830381865afa1580156111a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c79190611640565b905090565b60055481565b600080600080600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090508060000151935080602001519250600660009054906101000a900460ff16156112c75760006007544261126b9190611c31565b905060006005548261127d9190611a51565b9050600a81111561128d57600a90505b6000600a8285600001516112a191906119e0565b6112ab9190611a51565b90508360200151816112bd9190611c31565b94505050506112cc565b600091505b509193909250565b600660009054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600481565b602d81565b6000819050919050565b61132a81611317565b82525050565b60006040820190506113456000830185611321565b6113526020830184611321565b9392505050565b600060208201905061136e6000830184611321565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006113b96113b46113af84611374565b611394565b611374565b9050919050565b60006113cb8261139e565b9050919050565b60006113dd826113c0565b9050919050565b6113ed816113d2565b82525050565b600060208201905061140860008301846113e4565b92915050565b600080fd5b61141c81611317565b811461142757600080fd5b50565b60008135905061143981611413565b92915050565b6000602082840312156114555761145461140e565b5b60006114638482850161142a565b91505092915050565b600061147782611374565b9050919050565b6114878161146c565b811461149257600080fd5b50565b6000813590506114a48161147e565b92915050565b6000602082840312156114c0576114bf61140e565b5b60006114ce84828501611495565b91505092915050565b60008115159050919050565b6114ec816114d7565b82525050565b600060208201905061150760008301846114e3565b92915050565b6115168161146c565b82525050565b6000602082019050611531600083018461150d565b92915050565b6000806040838503121561154e5761154d61140e565b5b600061155c8582860161142a565b925050602061156d8582860161142a565b9150509250929050565b600060608201905061158c6000830186611321565b6115996020830185611321565b6115a66040830184611321565b949350505050565b600082825260208201905092915050565b7f4e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b60006115f56009836115ae565b9150611600826115bf565b602082019050919050565b60006020820190508181036000830152611624816115e8565b9050919050565b60008151905061163a81611413565b92915050565b6000602082840312156116565761165561140e565b5b60006116648482850161162b565b91505092915050565b6000604082019050611682600083018561150d565b61168f6020830184611321565b9392505050565b61169f816114d7565b81146116aa57600080fd5b50565b6000815190506116bc81611696565b92915050565b6000602082840312156116d8576116d761140e565b5b60006116e6848285016116ad565b91505092915050565b7f50726573616c652068617320656e646564000000000000000000000000000000600082015250565b60006117256011836115ae565b9150611730826116ef565b602082019050919050565b6000602082019050818103600083015261175481611718565b9050919050565b7f42656c6f77206d696e696d756d20707572636861736500000000000000000000600082015250565b60006117916016836115ae565b915061179c8261175b565b602082019050919050565b600060208201905081810360008301526117c081611784565b9050919050565b7f41626f7665206d6178696d756d20707572636861736500000000000000000000600082015250565b60006117fd6016836115ae565b9150611808826117c7565b602082019050919050565b6000602082019050818103600083015261182c816117f0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156118b95780860481111561189557611894611833565b5b60018516156118a45780820291505b80810290506118b285611862565b9450611879565b94509492505050565b6000826118d2576001905061198e565b816118e0576000905061198e565b81600181146118f657600281146119005761192f565b600191505061198e565b60ff84111561191257611911611833565b5b8360020a91508482111561192957611928611833565b5b5061198e565b5060208310610133831016604e8410600b84101617156119645782820a90508381111561195f5761195e611833565b5b61198e565b611971848484600161186f565b9250905081840481111561198857611987611833565b5b81810290505b9392505050565b60006119a082611317565b91506119ab83611317565b92506119d87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846118c2565b905092915050565b60006119eb82611317565b91506119f683611317565b9250828202611a0481611317565b91508282048414831517611a1b57611a1a611833565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611a5c82611317565b9150611a6783611317565b925082611a7757611a76611a22565b5b828204905092915050565b6000611a8d82611317565b9150611a9883611317565b9250828201905080821115611ab057611aaf611833565b5b92915050565b6000606082019050611acb600083018661150d565b611ad8602083018561150d565b611ae56040830184611321565b949350505050565b7f55534454207472616e73666572206661696c6564000000000000000000000000600082015250565b6000611b236014836115ae565b9150611b2e82611aed565b602082019050919050565b60006020820190508181036000830152611b5281611b16565b9050919050565b7f50726573616c65206e6f7420656e646564000000000000000000000000000000600082015250565b6000611b8f6011836115ae565b9150611b9a82611b59565b602082019050919050565b60006020820190508181036000830152611bbe81611b82565b9050919050565b7f4e6f20616c6c6f636174696f6e00000000000000000000000000000000000000600082015250565b6000611bfb600d836115ae565b9150611c0682611bc5565b602082019050919050565b60006020820190508181036000830152611c2a81611bee565b9050919050565b6000611c3c82611317565b9150611c4783611317565b9250828203905081811115611c5f57611c5e611833565b5b92915050565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b6000611c9b6010836115ae565b9150611ca682611c65565b602082019050919050565b60006020820190508181036000830152611cca81611c8e565b9050919050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b6000611d076015836115ae565b9150611d1282611cd1565b602082019050919050565b60006020820190508181036000830152611d3681611cfa565b9050919050565b7f5a65726f20616464726573730000000000000000000000000000000000000000600082015250565b6000611d73600c836115ae565b9150611d7e82611d3d565b602082019050919050565b60006020820190508181036000830152611da281611d66565b9050919050565b7f416c726561647920656e64656400000000000000000000000000000000000000600082015250565b6000611ddf600d836115ae565b9150611dea82611da9565b602082019050919050565b60006020820190508181036000830152611e0e81611dd2565b9050919050565b7f496e76616c6964206d696e2f6d61780000000000000000000000000000000000600082015250565b6000611e4b600f836115ae565b9150611e5682611e15565b602082019050919050565b60006020820190508181036000830152611e7a81611e3e565b905091905056fea2646970667358221220f20f1af0433066b8015e7a6ea62ceb1ff266461729628db0a722ddaa0458f2e164736f6c634300081c0033";

type TokenPresaleVestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenPresaleVestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenPresaleVesting__factory extends ContractFactory {
  constructor(...args: TokenPresaleVestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TokenPresaleVesting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TokenPresaleVesting__factory {
    return super.connect(runner) as TokenPresaleVesting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenPresaleVestingInterface {
    return new Interface(_abi) as TokenPresaleVestingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenPresaleVesting {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TokenPresaleVesting;
  }
}

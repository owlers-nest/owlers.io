/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Presale, PresaleInterface } from "../../Presale.sol/Presale";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [],
    name: "PresaleEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usdtAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "TokensPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usdtAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "PRICE_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_PRICE_USDT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VESTING_PERIODS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allocations",
    outputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimed",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "usdtAmount",
        type: "uint256",
      },
    ],
    name: "buyTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endPresale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRemainingTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSaleTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPresaleEnded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPurchase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minPurchase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleEnded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "saleToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_min",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_max",
        type: "uint256",
      },
    ],
    name: "setMinMax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "updateOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdt",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405262989680600355633b9aca00600455620151806005556000600660006101000a81548160ff02191690831515021790555034801561004157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073f01966d6ac471fbcdf2d35940a894d549c915c16600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550734654936576e68e4d9bb839acc5f194089a5cd285600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611eb28061013b6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80638da5cb5b116100b8578063b8e50cab1161007c578063b8e50cab146102f9578063b920ade214610317578063e580b2b014610349578063e985e36714610367578063f1a640f814610385578063f8736672146103a357610142565b80638da5cb5b14610279578063977b055b14610297578063a43be57b146102b5578063a681f950146102bf578063af35ae27146102db57610142565b806333b5b62e1161010a57806333b5b62e146101ca5780633610724e146101e857806348c54b9d1461020457806352a9039c1461020e5780637decf27f1461023f578063880cdc311461025d57610142565b806306c8e316146101475780631e7bace01461016657806324600fc314610184578063249b7c191461018e5780632f48ab7d146101ac575b600080fd5b61014f6103c1565b60405161015d92919061132b565b60405180910390f35b61016e6103d0565b60405161017b9190611354565b60405180910390f35b61018c6103d5565b005b6101966107df565b6040516101a39190611354565b60405180910390f35b6101b46107e5565b6040516101c191906113ee565b60405180910390f35b6101d261080b565b6040516101df9190611354565b60405180910390f35b61020260048036038101906101fd919061143a565b610811565b005b61020c610aa2565b005b610228600480360381019061022391906114a5565b610d73565b60405161023692919061132b565b60405180910390f35b610247610d97565b60405161025491906114ed565b60405180910390f35b610277600480360381019061027291906114a5565b610dae565b005b610281610eee565b60405161028e9190611517565b60405180910390f35b61029f610f12565b6040516102ac9190611354565b60405180910390f35b6102bd610f18565b005b6102d960048036038101906102d49190611532565b611046565b005b6102e3611129565b6040516102f09190611354565b60405180910390f35b6103016111cc565b60405161030e9190611354565b60405180910390f35b610331600480360381019061032c91906114a5565b6111d2565b60405161034093929190611572565b60405180910390f35b6103516112cf565b60405161035e91906114ed565b60405180910390f35b61036f6112e2565b60405161037c91906113ee565b60405180910390f35b61038d611308565b60405161039a9190611354565b60405180910390f35b6103ab61130d565b6040516103b89190611354565b60405180910390f35b600080602d6004915091509091565b600a81565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610463576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045a90611606565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104c09190611517565b602060405180830381865afa1580156104dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610501919061163b565b90506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105609190611517565b602060405180830381865afa15801561057d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a1919061163b565b9050600082111561066e57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b8152600401610629929190611668565b6020604051808303816000875af1158015610648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066c91906116bd565b505b600660009054906101000a900460ff16801561068a5750600081115b1561076b5760005b60648110156106a8578080600101915050610692565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610726929190611668565b6020604051808303816000875af1158015610745573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076991906116bd565b505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc683836040516107d392919061132b565b60405180910390a25050565b60075481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b600660009054906101000a900460ff1615610861576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085890611736565b60405180910390fd5b6003548110156108a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089d906117a2565b60405180910390fd5b6004548111156108eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e29061180e565b60405180910390fd5b6000602d6004600a6108fd9190611990565b8361090891906119db565b6109129190611a4c565b905080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546109669190611a7d565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016109cc93929190611ab1565b6020604051808303816000875af11580156109eb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0f91906116bd565b610a4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4590611b34565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f338383604051610a9692919061132b565b60405180910390a25050565b600660009054906101000a900460ff16610af1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae890611ba0565b60405180910390fd5b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015411610b7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7290611c0c565b60405180910390fd5b600060075442610b8b9190611c2c565b9050600060055482610b9d9190611a4c565b9050600a811115610bad57600a90505b6000600a828560000154610bc191906119db565b610bcb9190611a4c565b90506000846001015482610bdf9190611c2c565b905060008111610c24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1b90611cac565b60405180910390fd5b80856001016000828254610c389190611a7d565b92505081905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610c9c929190611668565b6020604051808303816000875af1158015610cbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdf91906116bd565b610d1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1590611d18565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e43082604051610d649190611354565b60405180910390a25050505050565b60086020528060005260406000206000915090508060000154908060010154905082565b6000600660009054906101000a900460ff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3390611606565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610eab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea290611d84565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fa6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9d90611606565b60405180910390fd5b600660009054906101000a900460ff1615610ff6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fed90611df0565b60405180910390fd5b6001600660006101000a81548160ff021916908315150217905550426007819055507f1eb1561f8507eb9bc6988331f66f369e75710f2b4b678ad5b4a52454b6636f5f60405160405180910390a1565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110cb90611606565b60405180910390fd5b80821115611117576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110e90611e5c565b60405180910390fd5b81600381905550806004819055505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111869190611517565b602060405180830381865afa1580156111a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c7919061163b565b905090565b60055481565b600080600080600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050806000015193508060200151925060009150600660009054906101000a900460ff16156112c75760006007544261126f9190611c2c565b90506000600554826112819190611a4c565b9050600a81111561129157600a90505b6000600a8285600001516112a591906119db565b6112af9190611a4c565b90508360200151816112c19190611c2c565b94505050505b509193909250565b600660009054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600481565b602d81565b6000819050919050565b61132581611312565b82525050565b6000604082019050611340600083018561131c565b61134d602083018461131c565b9392505050565b6000602082019050611369600083018461131c565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006113b46113af6113aa8461136f565b61138f565b61136f565b9050919050565b60006113c682611399565b9050919050565b60006113d8826113bb565b9050919050565b6113e8816113cd565b82525050565b600060208201905061140360008301846113df565b92915050565b600080fd5b61141781611312565b811461142257600080fd5b50565b6000813590506114348161140e565b92915050565b6000602082840312156114505761144f611409565b5b600061145e84828501611425565b91505092915050565b60006114728261136f565b9050919050565b61148281611467565b811461148d57600080fd5b50565b60008135905061149f81611479565b92915050565b6000602082840312156114bb576114ba611409565b5b60006114c984828501611490565b91505092915050565b60008115159050919050565b6114e7816114d2565b82525050565b600060208201905061150260008301846114de565b92915050565b61151181611467565b82525050565b600060208201905061152c6000830184611508565b92915050565b6000806040838503121561154957611548611409565b5b600061155785828601611425565b925050602061156885828601611425565b9150509250929050565b6000606082019050611587600083018661131c565b611594602083018561131c565b6115a1604083018461131c565b949350505050565b600082825260208201905092915050565b7f4e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b60006115f06009836115a9565b91506115fb826115ba565b602082019050919050565b6000602082019050818103600083015261161f816115e3565b9050919050565b6000815190506116358161140e565b92915050565b60006020828403121561165157611650611409565b5b600061165f84828501611626565b91505092915050565b600060408201905061167d6000830185611508565b61168a602083018461131c565b9392505050565b61169a816114d2565b81146116a557600080fd5b50565b6000815190506116b781611691565b92915050565b6000602082840312156116d3576116d2611409565b5b60006116e1848285016116a8565b91505092915050565b7f50726573616c652068617320656e646564000000000000000000000000000000600082015250565b60006117206011836115a9565b915061172b826116ea565b602082019050919050565b6000602082019050818103600083015261174f81611713565b9050919050565b7f42656c6f77206d696e696d756d20707572636861736500000000000000000000600082015250565b600061178c6016836115a9565b915061179782611756565b602082019050919050565b600060208201905081810360008301526117bb8161177f565b9050919050565b7f41626f7665206d6178696d756d20707572636861736500000000000000000000600082015250565b60006117f86016836115a9565b9150611803826117c2565b602082019050919050565b60006020820190508181036000830152611827816117eb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156118b4578086048111156118905761188f61182e565b5b600185161561189f5780820291505b80810290506118ad8561185d565b9450611874565b94509492505050565b6000826118cd5760019050611989565b816118db5760009050611989565b81600181146118f157600281146118fb5761192a565b6001915050611989565b60ff84111561190d5761190c61182e565b5b8360020a9150848211156119245761192361182e565b5b50611989565b5060208310610133831016604e8410600b841016171561195f5782820a90508381111561195a5761195961182e565b5b611989565b61196c848484600161186a565b925090508184048111156119835761198261182e565b5b81810290505b9392505050565b600061199b82611312565b91506119a683611312565b92506119d37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846118bd565b905092915050565b60006119e682611312565b91506119f183611312565b92508282026119ff81611312565b91508282048414831517611a1657611a1561182e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611a5782611312565b9150611a6283611312565b925082611a7257611a71611a1d565b5b828204905092915050565b6000611a8882611312565b9150611a9383611312565b9250828201905080821115611aab57611aaa61182e565b5b92915050565b6000606082019050611ac66000830186611508565b611ad36020830185611508565b611ae0604083018461131c565b949350505050565b7f55534454207472616e73666572206661696c6564000000000000000000000000600082015250565b6000611b1e6014836115a9565b9150611b2982611ae8565b602082019050919050565b60006020820190508181036000830152611b4d81611b11565b9050919050565b7f50726573616c65206e6f7420656e646564000000000000000000000000000000600082015250565b6000611b8a6011836115a9565b9150611b9582611b54565b602082019050919050565b60006020820190508181036000830152611bb981611b7d565b9050919050565b7f4e6f20616c6c6f636174696f6e00000000000000000000000000000000000000600082015250565b6000611bf6600d836115a9565b9150611c0182611bc0565b602082019050919050565b60006020820190508181036000830152611c2581611be9565b9050919050565b6000611c3782611312565b9150611c4283611312565b9250828203905081811115611c5a57611c5961182e565b5b92915050565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b6000611c966010836115a9565b9150611ca182611c60565b602082019050919050565b60006020820190508181036000830152611cc581611c89565b9050919050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b6000611d026015836115a9565b9150611d0d82611ccc565b602082019050919050565b60006020820190508181036000830152611d3181611cf5565b9050919050565b7f5a65726f20616464726573730000000000000000000000000000000000000000600082015250565b6000611d6e600c836115a9565b9150611d7982611d38565b602082019050919050565b60006020820190508181036000830152611d9d81611d61565b9050919050565b7f416c726561647920656e64656400000000000000000000000000000000000000600082015250565b6000611dda600d836115a9565b9150611de582611da4565b602082019050919050565b60006020820190508181036000830152611e0981611dcd565b9050919050565b7f496e76616c6964206d696e2f6d61780000000000000000000000000000000000600082015250565b6000611e46600f836115a9565b9150611e5182611e10565b602082019050919050565b60006020820190508181036000830152611e7581611e39565b905091905056fea2646970667358221220ff3d10d1f70f3cf9ccbda897f852c0ddefa1e3b9c9d8d0e7de8c8882a08a06da64736f6c634300081c0033";

type PresaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PresaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Presale__factory extends ContractFactory {
  constructor(...args: PresaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Presale & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Presale__factory {
    return super.connect(runner) as Presale__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PresaleInterface {
    return new Interface(_abi) as PresaleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Presale {
    return new Contract(address, _abi, runner) as unknown as Presale;
  }
}
